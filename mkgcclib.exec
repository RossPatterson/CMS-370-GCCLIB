&CONTROL OFF NOMSG

* &SDISK is where our sources live.
&SDISK = F
* &ODISK is where the output lives (libraries, etc).
&ODISK = E
&RESULT = 0

* Note:  if you don't have EMIT MODULE, replace EMIT with &TYPE...

* Stack the assembler files to process.
&BEGSTACK ALL
CMSENTRY CMSJUMP CMSSYS DYNSTK CMSRUNTA
&END
&LOOP -ENDAA &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDA &INDEX
      EMIT Assembling &&I
      ASSEMBLE &&I ( LIST
      &IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE &&I
      &IF &RETCODE > 0 &RESULT = &RETCODE
  -ENDA &I = &I + 1
-ENDAA

* Stack the C files to process.
&BEGSTACK ALL
CMSRTSTB CMSRUNTM MALLOC CMSSYSC CMSSTDIO CMSSTDLB ASSERT CTYPE LOCALE MATH
SIGNAL STRING TIME CMSIO CONDRV  PUNDRV   PRTDRV   RDRDRV DSKDRV RESMAIN
&END
&LOOP -ENDCC &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDC &INDEX
      EMIT Compiling &&I
      EXEC GCC &&I C &SDISK (CSECT LIB GCCLIB PARM GCCLIB
      &IF &RETCODE > 0 &RESULT = &RETCODE
   -ENDC &I = &I + 1
-ENDCC

&IF &RESULT > 0 &EXIT &RESULT

EMIT Generating standard GCCLIB TXTLIB...
TXTLIB GEN GCCLIB CMSENTRY
TXTLIB ADD GCCLIB CMSRTSTB
TXTLIB ADD GCCLIB CMSRUNTM
TXTLIB ADD GCCLIB CMSRUNTA
TXTLIB ADD GCCLIB DYNSTK
TXTLIB ADD GCCLIB CMSJUMP
TXTLIB ADD GCCLIB CMSIO
TXTLIB ADD GCCLIB CONDRV
TXTLIB ADD GCCLIB PUNDRV
TXTLIB ADD GCCLIB PRTDRV
TXTLIB ADD GCCLIB RDRDRV
TXTLIB ADD GCCLIB DSKDRV
TXTLIB ADD GCCLIB CMSSTDIO
TXTLIB ADD GCCLIB CMSSTDLB
TXTLIB ADD GCCLIB MALLOC
TXTLIB ADD GCCLIB CMSSYSC
TXTLIB ADD GCCLIB CMSSYS
TXTLIB ADD GCCLIB ASSERT
TXTLIB ADD GCCLIB CTYPE
TXTLIB ADD GCCLIB LOCALE
TXTLIB ADD GCCLIB MATH
TXTLIB ADD GCCLIB SIGNAL
TXTLIB ADD GCCLIB STRING
TXTLIB ADD GCCLIB TIME
COPY GCCLIB TXTLIB A = = &ODISK (REPLACE OLDDATE
ERASE GCCLIB TXTLIB A

EMIT Building MAKELIB ...
GLOBAL TXTLIB GCCLIB
EXEC GCC MAKELIB C &SDISK (CMS
&IF &RETCODE > 0 &RESULT = &RETCODE
LOAD MAKELIB
GENMOD MAKELIB
MAKELIB MEMBERS PARM &SDISK
&IF &RETCODE > 0 &RESULT = &RETCODE
GLOBAL TXTLIB

EMIT Generating resident GCCRES TXTLIB...
TXTLIB GEN GCCRES CMSENTRY
TXTLIB ADD GCCRES CMSRTSTB
TXTLIB ADD GCCRES DYNSTK
&LOOP -ENDSTBS &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDSTB &INDEX
     ASSEMBLE &&I ( NOLIST NOTERM
     &IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE &&I
     &IF &RETCODE > 0 &RESULT = &RETCODE
     TXTLIB ADD GCCRES &&I
   -ENDSTB &I = &I + 1
-ENDSTBS

COPY GCCRES TXTLIB A = = &ODISK (REPLACE OLDDATE
ERASE GCCRES TXTLIB A

ASSEMBLE CMSVTAB ( NOLIST NOTERM
&IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE &&I
&IF &RETCODE > 0 &RESULT = &RETCODE

EMIT Building GCCLIB TEXT...
COPYFILE CMSVTAB  TEXT A GCCLIB TEXT &ODISK (REPLACE
&IF &RETCODE > 0 &RESULT = &RETCODE
* And add the rest of the TEXT files
&BEGSTACK ALL
RESMAIN
CMSENTRY CMSRTSTB CMSRUNTM CMSRUNTA DYNSTK CMSJUMP
CMSIO CONDRV PUNDRV PRTDRV RDRDRV DSKDRV
CMSSTDIO CMSSTDLB MALLOC CMSSYSC CMSSYS ASSERT CTYPE
LOCALE MATH SIGNAL STRING TIME
&END
&LOOP -ENDTT &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDT &INDEX
      COPYFILE &&I  TEXT A GCCLIB TEXT &ODISK (APPEND
      &IF &RETCODE > 0 &RESULT = &RETCODE
   -ENDT &I = &I + 1
-ENDTT

&IF &RESULT > 0 &EXIT &RESULT

&EXIT
